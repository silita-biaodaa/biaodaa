<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silita.biaodaa.dao.TbCompanyMapper">

    <!-- 查询企业列表 -->
    <select id="queryCompanyList" resultType="com.silita.biaodaa.model.TbCompany" parameterType="String">
    SELECT
      c.*,
      s.cert_no,
      s.cert_date,
      s.valid_date,
      b.runScope AS comRange,
      b.registerStatus AS subsist
    FROM
      tb_company c
      LEFT JOIN tb_safety_certificate s
        ON c.com_name = s.com_name
      LEFT JOIN mishu_next.cert_basic b
        ON b.registerNo = c.org_code
        AND b.companyName = c.com_name
    WHERE 1 = 1
    and c.com_name like CONCAT('%',#{keyWord},'%')
  </select>

    <select id="getCompany" resultType="com.silita.biaodaa.model.TbCompany" parameterType="java.lang.String">
    SELECT
      c.*,
      c.credit_code as creditCode,
      c.credit_code as businessNum,
      s.cert_no,
      s.cert_date,
      s.valid_date,
      b.registerStatus AS subsist
    FROM
      tb_company c
      LEFT JOIN tb_safety_certificate s
        ON c.com_name = s.com_name
      LEFT JOIN mishu_next.cert_basic b
        ON b.registerNo = c.org_code
        AND b.companyName = c.com_name
    WHERE 1 = 1
    and c.com_id = #{comId}
    limit 1
  </select>

    <select id="filterCompany" resultType="com.silita.biaodaa.model.TbCompany" parameterType="Map">
        SELECT
        c.*
        FROM
        tb_company c
        where 1=1
        <if test="keyWord!=null and keyWord!=''">
            and (c.com_name like CONCAT('%',#{keyWord},'%') or c.legal_person like CONCAT('%',#{keyWord},'%'))
        </if>
        <if test="province!=null and province!=''">
            and c.regis_address like CONCAT('%',#{province},'%')
        </if>
        <if test="cityList != null and cityList.size() > 0">
            and
            <foreach collection="cityList" item="list" open="(" close=")" separator="or">
                c.city like CONCAT(#{list},'%')
            </foreach>
        </if>
        <if test="minCapital!=null">
            <![CDATA[ and c.regis_capital >= #{minCapital} ]]>
        </if>
        <if test="maxCapital!=null">
            <![CDATA[ and c.regis_capital <= #{maxCapital} ]]>
        </if>
        /*筛选条件全部为***级及以上并且是和的关系*/
        <if test="null != qualRangeType and qualRangeType != '' and (qualRangeType == 'over_and' or qualRangeType == 'above_sum_and')">
            AND
            <foreach collection="qualCode" item="item" separator="and" close=")" open="(">
                <foreach collection="item" item="qual" separator="or" open="(" close=")">
                    c.range like CONCAT('%',#{qual},'%')
                </foreach>
            </foreach>
        </if>
        /*筛选条件为****级以上和等级并且是和的关系*/
        <if test="null != qualRangeType and qualRangeType != '' and qualRangeType == 'above_sum_and'">
            AND
            <foreach collection="qualCode" item="item" separator="and" close=")" open="(">
                c.range like CONCAT('%',#{item},'%')
            </foreach>
        </if>
        /*筛选条件全部为***级及以上并且是或的关系/筛选条件为****级以上和等级并且是或的关系*/
        <if test="null != qualRangeType and qualRangeType != '' and (qualRangeType == 'over_or' or qualRangeType == 'above_sum_or')">
            AND
            <foreach collection="qualCode" item="item" separator="or" close=")" open="(">
                c.range like CONCAT('%',#{item},'%')
            </foreach>
        </if>
        /*筛选条件为非****级以上并且是和/或的关系*/
        <if test="null != qualRangeType and qualRangeType != '' and qualRangeType == 'never'">
            AND
            <choose>
                <when test="null != rangeType and rangeType != '' and rangeType == 'and'">
                    <foreach collection="qualCode" item="item" separator="and" close=")" open="(">
                        c.range like CONCAT('%',#{item},'%')
                    </foreach>
                </when>
                <otherwise>
                    <foreach collection="qualCode" item="item" separator="or" close=")" open="(">
                        c.range like CONCAT('%',#{item},'%')
                    </foreach>
                </otherwise>
            </choose>
        </if>
        order by c.px desc
    </select>

    <select id="getAreaCode" parameterType="String" resultType="String">
    select code from area where `name`=#{name} or display_name=#{name}
  </select>

    <select id="queryProvinceList" resultType="Map">
    select id,display_name from area where grade=0 AND display_name != '澳门特别行政区' AND display_name != '台湾省' AND display_name != '香港特别行政区' order by name_abbr
  </select>

    <select id="queryCityList" resultType="String" parameterType="String">
    select display_name from area where parent_id=#{parentId}  order by name_abbr
  </select>

    <select id="getCompanyOrgCode" parameterType="java.lang.String" resultType="com.silita.biaodaa.model.TbCompany">
    SELECT *
    FROM tb_company c
    where com_id=#{comId} limit 1
  </select>

    <select id="getCertSrcUuid" parameterType="String" resultType="String">
    select uuid from cert_src where uuid is not null and companyCode=#{companyCode}
  </select>

    <select id="getCertAqrz" parameterType="Map" resultType="Map">
        select zh.mateName,zh.score from cert_aqrz a
        left join prize_zh zh on a.zhUuid=zh.uuid
        where a.zhUuid is not null and a.yxqTime > date(now()) and srcUuid in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by zh.score desc limit 1;
    </select>

    <select id="getCertQyhj" parameterType="Map" resultType="Map">
        select q.projName,q.projType,q.joinType,q.years,zh.type,zh.code,zh.mateName,zh.score,zh.shortName,zh.shortRemark
        from cert_qyhj q
        left join prize_zh zh on q.zhUuid=zh.uuid
        where q.zhUuid is not null
        and q.joinType='承建单位' and srcUuid in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by zh.score desc
    </select>

    <select id="getUndesirable" parameterType="Map" resultType="Map">
        select id,nature,publishDate,projectName,actionCode,validityDate,publishSite,badBehaviorContent,score
        from cert_undesirable
        where validityDate > date(now()) and persionName is null and srcUUid in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getUndesirableScore" parameterType="Map" resultType="Double">
        select sum(score)
        from cert_undesirable
        where validityDate > date(now()) and persionName is null and srcUUid in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getLogo" parameterType="java.lang.String" resultType="String">
      select logo from mishu.tb_company where com_id=#{com_id}
  </select>

    <select id="getColleCount" parameterType="Map" resultType="Integer">
    select count(*) from mishu_write.colle_company_new where companyId=#{comId} and userId=#{userId}
  </select>

    <select id="queryCompanyDetail" resultType="com.silita.biaodaa.model.TbCompany" parameterType="java.lang.String">
      select c.*,
--       (
--         CASE WHEN c.`regis_capital`  IS NOT NULL
--         THEN c.`regis_capital`
--         ELSE
--         t.`regis_capital`
--         END
--       ) AS regisCapital,
      c.credit_code as creditCode,
      c.credit_code as businessNum,
      s.cert_no,
      s.cert_date,
      s.valid_date,
--       b.runScope AS comRange,
      b.registerStatus AS subsist
--       TRIM(SUBSTRING_INDEX(t.`phone`, ';', 1)) AS phone,
--       TRIM(t.`phone`) AS phone,
--       TRIM(SUBSTRING_INDEX(t.`com_url`, ';', 1))  AS comUrl,
--       TRIM(SUBSTRING_INDEX(t.`email`, ';', 1)) AS email,
--       t.`scope` AS comRange,
--       t.`regis_date` as regisDate
    FROM
      tb_company c
      LEFT JOIN tb_safety_certificate s
        ON c.com_name = s.com_name
      LEFT JOIN mishu_next.cert_basic b
        ON b.registerNo = c.org_code
        AND b.companyName = c.com_name
--       LEFT JOIN tb_company_info t ON t.`com_name` = c.`com_name`
    WHERE 1 = 1
     AND c.`com_name` = #{comName}
      ORDER BY c.`created` DESC
      LIMIT 1
  </select>

    <select id="filterSecureCompany" resultType="com.silita.biaodaa.model.TbCompany" parameterType="Map">
        SELECT
        c.*
        FROM
        cert_aqrz a
        LEFT JOIN cert_src s
        ON a.srcUuid = s.`uuid`
        LEFT JOIN tb_company c
        ON c.com_name = s.companyName
        WHERE c.com_id IS NOT NULL
        <if test="keyWord!=null and keyWord!=''">
            and (c.com_name like CONCAT('%',#{keyWord},'%') or c.legal_person like CONCAT('%',#{keyWord},'%'))
        </if>
        <if test="province!=null and province!=''">
            and c.regis_address like CONCAT('%',#{province},'%')
        </if>
        <if test="cityList != null and cityList.size() > 0">
            and
            <foreach collection="cityList" item="list" open="(" close=")" separator="or">
                c.city like CONCAT(#{list},'%')
            </foreach>
        </if>
        <if test="minCapital!=null">
            <![CDATA[ and c.regis_capital >= #{minCapital} ]]>
        </if>
        <if test="maxCapital!=null">
            <![CDATA[ and c.regis_capital <= #{maxCapital} ]]>
        </if>
        <if test="zzLevel == 'default' and qualCode!=null and qualCode!=''">
            and c.range like CONCAT('%',#{qualCode},'%')
        </if>
        <if test="zzLevel == 'level'">
            and
            <if test="rangeType == 'or'">
                <foreach collection="range" item="zzList" close=")" separator="or" open="(">
                    <foreach collection="zzList.rangeList" item="rangeList" close=")" separator="or" open="(">
                        c.range like CONCAT('%',#{rangeList},'%')
                    </foreach>
                </foreach>
            </if>
            <if test="rangeType == 'and'">
                <foreach collection="range" item="zzList" close=")" separator="and" open="(">
                    <foreach collection="zzList.rangeList" item="rangeList" close=")" separator="or" open="(">
                        c.range like CONCAT('%',#{rangeList},'%')
                    </foreach>
                </foreach>
            </if>
        </if>
        <if test="level!=null and level!=''">
            and a.secureLevel=#{level}
        </if>
        <if test="rank!=null and rank!=''">
            and a.secureRank=#{rank}
        </if>
        order by c.px desc
    </select>

    <select id="getCompanyUrl" parameterType="java.lang.String" resultType="String">
    select  url from tb_company_qualification where com_id = #{comId} limit 1
  </select>

    <select id="matchName" parameterType="Map" resultType="Map">
  select com_name,com_code
  from mishu.tb_company
  where com_name like #{name} or com_name_py like #{name}
  order by px desc
  limit #{count}
  </select>

    <select id="queryCountyList" resultType="java.util.Map">
      SELECT t.`display_name` AS displayName,t.`parent_id` as parentId
      FROM area t
      WHERE t.`grade` = 2
      ORDER BY t.name_abbr
  </select>

    <select id="queryCityPathList" resultType="java.util.Map" parameterType="String">
    select
      display_name as displayName,
      SUBSTRING_INDEX(`path`, ',', -1) as path
    from area
    where parent_id=#{parentId}
    order by name_abbr
  </select>

    <select id="queryHostCompanyList" resultType="com.silita.biaodaa.model.TbCompany" parameterType="java.util.Map">
    select t.*
    from tb_company t
    where 1=1
    and t.regis_address like CONCAT(#{regisAddress},'%')
    order by t.px desc
    limit #{limit}
  </select>

    <select id="queryCompanyEsList" resultType="com.silita.biaodaa.model.es.CompanyEs" parameterType="java.util.Map">
        SELECT t.com_id
        ,t.com_name
        ,t.com_name_py
        ,IFNULL(t.px,0) AS px
        ,regis_address AS regisAddress
        ,credit_code AS creditCode
        FROM tb_company t
        WHERE 1=1
        AND t.`com_name` IS NOT NULL AND t.`com_name` != ''
        <if test="regisAddress != null and regisAddress != ''">
            and t.regis_address = #{regisAddress}
        </if>
        order by t.px desc
        limit #{page},#{pageSize}
    </select>

    <select id="queryCompanyCount" resultType="java.lang.Integer">
    SELECT count(1)
      FROM tb_company t
      WHERE 1=1
      AND t.`com_name` IS NOT NULL AND t.`com_name` != ''
  </select>

    <select id="queryCompanyAddressCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT count(1)
        FROM tb_company t
        WHERE 1=1
        AND t.`com_name` IS NOT NULL AND t.`com_name` != ''
        <if test="regisAddress != null and regisAddress != ''">
            and t.regis_address = #{regisAddress}
        </if>
        order by t.px desc
    </select>

    <select id="getCertSrcUuidByName" resultType="java.lang.String" parameterType="java.lang.String">
        select uuid from cert_src where uuid is not null
        and companyName=#{companyName}
    </select>

    <select id="queryCompanyChangsha" resultType="java.util.Map">
        SELECT
          t.`com_name`,
          t.`legal_person`,
          t.`regis_address`
        FROM
          tb_company t
        WHERE t.`regis_address` = '陕西省'
        AND t.`range` IS NOT NULL
        AND t.`range` != '';
    </select>
</mapper>